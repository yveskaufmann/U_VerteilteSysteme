
version =  '1.0.0-SNAPSHOT'

subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    sourceCompatibility = '1.8'
    version = "${version}"

    eclipse {
        classpath {
           downloadSources = true
           downloadJavadoc = true
        }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
			jdkName='1.8'
        }
    }

    repositories {
       maven { url "http://repo.springsource.org/libs-release" }
       mavenCentral()
    }

    dependencies {
		if (!project.name.equals("Share")) {
			compile project(':Share')
		}

		compile 'org.springframework.shell:spring-shell:1.1.0.RELEASE'
        compile 'org.apache.commons:commons-lang3:3.3.2'

		/**
		 * Logging
		 */
		compile 'org.slf4j:slf4j-api:1.7.12'
		compile 'org.slf4j:jul-to-slf4j:1.7.12'
		compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.3'
		compile 'org.apache.logging.log4j:log4j-core:2.3'

		/**
		 * Testing
		 */

		testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:2.0.7-beta'
    }
}

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '2.4'
}


task javadoc(type: Javadoc) {
	description = "Generates aggregated Javadoc API documentation."

	ext.javadocLinks = [
		"http://docs.oracle.com/javase/8/docs/api/",
		"http://docs.spring.io/spring/docs/4.0.3.RELEASE/javadoc-api/",
		"http://docs.spring.io/spring-shell/docs/1.1.0.RELEASE/api/",
		"http://commons.apache.org/proper/commons-lang/javadocs/api-3.3.2/",
		"http://jline.github.io/jline2/apidocs/reference/"
	] as String[]

	title = project.name + " - ${version}"
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.overview ="doc/overview.html"
	options.author = true
	options.header = project.name
	options.splitIndex = true
	options.links(ext.javadocLinks)
	options.addStringOption('Xdoclint:none', '-quiet')
	maxMemory = "1024m"

	/*
	 * Powered by:
	 * http://gradle.1045684.n5.nabble.com/aggregating-javadocs-td1433469.html
	 */
	source subprojects.collect { project -> project.sourceSets.main.allJava }
	destinationDir = new File(buildDir, 'javadoc')

	classpath = files(subprojects.collect {project ->
		project.sourceSets.main.compileClasspath
	})
}


